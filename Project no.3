{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPH27Tkq9IXTM5eycnl9PFQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **Car price prediction with ML**:"],"metadata":{"id":"YIoGvY4Fxn6A"}},{"cell_type":"markdown","source":[],"metadata":{"id":"sZ7spzzsxRpU"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"4wvY-hBta_zG","executionInfo":{"status":"ok","timestamp":1752896840173,"user_tz":-300,"elapsed":3025,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns"]},{"cell_type":"code","source":["df=pd.read_csv('/content/car prediction.csv')"],"metadata":{"id":"_hd7xvCddrDU","executionInfo":{"status":"ok","timestamp":1752896840191,"user_tz":-300,"elapsed":9,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hOoi8tyddxgV","executionInfo":{"status":"ok","timestamp":1752896840442,"user_tz":-300,"elapsed":246,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"a1e03a92-d0f7-4c45-f6d2-ef7ecd66b0e4"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Car_Name  Year  Selling_Price  Present_Price  Driven_kms Fuel_Type  \\\n","0     ritz  2014           3.35           5.59       27000    Petrol   \n","1      sx4  2013           4.75           9.54       43000    Diesel   \n","2     ciaz  2017           7.25           9.85        6900    Petrol   \n","3  wagon r  2011           2.85           4.15        5200    Petrol   \n","4    swift  2014           4.60           6.87       42450    Diesel   \n","\n","  Selling_type Transmission  Owner  \n","0       Dealer       Manual      0  \n","1       Dealer       Manual      0  \n","2       Dealer       Manual      0  \n","3       Dealer       Manual      0  \n","4       Dealer       Manual      0  "],"text/html":["\n","  <div id=\"df-5db85be7-1699-4ec4-943b-3006001d116a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car_Name</th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Driven_kms</th>\n","      <th>Fuel_Type</th>\n","      <th>Selling_type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ritz</td>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sx4</td>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ciaz</td>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>wagon r</td>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>swift</td>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5db85be7-1699-4ec4-943b-3006001d116a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5db85be7-1699-4ec4-943b-3006001d116a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5db85be7-1699-4ec4-943b-3006001d116a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-96c4899a-5a86-4d2d-af96-a00fe6de2350\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96c4899a-5a86-4d2d-af96-a00fe6de2350')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-96c4899a-5a86-4d2d-af96-a00fe6de2350 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 301,\n  \"fields\": [\n    {\n      \"column\": \"Car_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 98,\n        \"samples\": [\n          \"Hero Passion Pro\",\n          \"Honda CB Hornet 160R\",\n          \"city\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2003,\n        \"max\": 2018,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          2014,\n          2013,\n          2015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Selling_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.082811556177804,\n        \"min\": 0.1,\n        \"max\": 35.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          0.4,\n          7.05,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Present_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.64258435982547,\n        \"min\": 0.32,\n        \"max\": 92.6,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          8.4,\n          36.23,\n          11.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Driven_kms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38886,\n        \"min\": 500,\n        \"max\": 500000,\n        \"num_unique_values\": 206,\n        \"samples\": [\n          41678,\n          42367,\n          60076\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Petrol\",\n          \"Diesel\",\n          \"CNG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Selling_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Individual\",\n          \"Dealer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Automatic\",\n          \"Manual\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df=df.drop(columns='Car_Name')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"oNQbTVBHd39Q","executionInfo":{"status":"ok","timestamp":1752896845945,"user_tz":-300,"elapsed":83,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"56814400-751b-431a-c632-e6a36a851b21"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Selling_Price  Present_Price  Driven_kms Fuel_Type Selling_type  \\\n","0  2014           3.35           5.59       27000    Petrol       Dealer   \n","1  2013           4.75           9.54       43000    Diesel       Dealer   \n","2  2017           7.25           9.85        6900    Petrol       Dealer   \n","3  2011           2.85           4.15        5200    Petrol       Dealer   \n","4  2014           4.60           6.87       42450    Diesel       Dealer   \n","\n","  Transmission  Owner  \n","0       Manual      0  \n","1       Manual      0  \n","2       Manual      0  \n","3       Manual      0  \n","4       Manual      0  "],"text/html":["\n","  <div id=\"df-f1650766-5ab9-4aad-9540-37f8f1775d5a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Driven_kms</th>\n","      <th>Fuel_Type</th>\n","      <th>Selling_type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1650766-5ab9-4aad-9540-37f8f1775d5a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f1650766-5ab9-4aad-9540-37f8f1775d5a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f1650766-5ab9-4aad-9540-37f8f1775d5a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c2e7e89f-4133-49c7-b7e9-e8708ab0288a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2e7e89f-4133-49c7-b7e9-e8708ab0288a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c2e7e89f-4133-49c7-b7e9-e8708ab0288a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 301,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2003,\n        \"max\": 2018,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          2014,\n          2013,\n          2015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Selling_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.082811556177804,\n        \"min\": 0.1,\n        \"max\": 35.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          0.4,\n          7.05,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Present_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.64258435982547,\n        \"min\": 0.32,\n        \"max\": 92.6,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          8.4,\n          36.23,\n          11.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Driven_kms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38886,\n        \"min\": 500,\n        \"max\": 500000,\n        \"num_unique_values\": 206,\n        \"samples\": [\n          41678,\n          42367,\n          60076\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Petrol\",\n          \"Diesel\",\n          \"CNG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Selling_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Individual\",\n          \"Dealer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Automatic\",\n          \"Manual\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"97M0R35peQpX","executionInfo":{"status":"ok","timestamp":1752896849111,"user_tz":-300,"elapsed":651,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"20cc1ca4-23cf-4a38-c602-41318d71ed00"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Year             0\n","Selling_Price    0\n","Present_Price    0\n","Driven_kms       0\n","Fuel_Type        0\n","Selling_type     0\n","Transmission     0\n","Owner            0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Year</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Selling_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Present_Price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Driven_kms</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Fuel_Type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Selling_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Transmission</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Owner</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['Selling_Price'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"g-7Y9_5QeYfZ","executionInfo":{"status":"ok","timestamp":1752896856000,"user_tz":-300,"elapsed":45,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"e023f86a-b2bd-47ae-9721-c2f5a4cb84b9"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    301.000000\n","mean       4.661296\n","std        5.082812\n","min        0.100000\n","25%        0.900000\n","50%        3.600000\n","75%        6.000000\n","max       35.000000\n","Name: Selling_Price, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Selling_Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>301.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>4.661296</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.082812</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.900000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.600000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>35.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df['Selling_Price'].plot.hist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"L9XjhPAqejrc","executionInfo":{"status":"ok","timestamp":1752896858768,"user_tz":-300,"elapsed":560,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"ac21984c-7140-45dd-9761-1b1fd72fd283"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(df['Selling_Price'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"8iT9nJb-eyJM","executionInfo":{"status":"ok","timestamp":1752896867780,"user_tz":-300,"elapsed":1231,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"18f18437-3a65-4568-a01a-cb79849a82aa"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Selling_Price'>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["q1=df['Selling_Price'].quantile(0.25)\n","q3=df['Selling_Price'].quantile(0.75)\n","IQR=q3-q1\n","IQR"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n2NUIn-ee-jT","executionInfo":{"status":"ok","timestamp":1752896873444,"user_tz":-300,"elapsed":55,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"676ab69b-3c0a-4f8f-c022-3394bf3a0b82"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(5.1)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["upper_limit=q3+1.5*IQR\n","lower_limit=q1-1.5*IQR\n","upper_limit,lower_limit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2NZ4rPvqfg92","executionInfo":{"status":"ok","timestamp":1752896875259,"user_tz":-300,"elapsed":29,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"d8d799a8-6fdc-4e23-a0eb-1b6422d0ae27"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(np.float64(13.649999999999999), np.float64(-6.749999999999999))"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["def inputer(value):\n","  if value > upper_limit:\n","    return upper_limit\n","  elif value < lower_limit:\n","    return lower_limit\n","  else:\n","    return value"],"metadata":{"id":"8tqx9kMLf4eN","executionInfo":{"status":"ok","timestamp":1752896882497,"user_tz":-300,"elapsed":34,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df['Selling_Price'] = df['Selling_Price'].apply(inputer)"],"metadata":{"id":"1OEE-t0MvrPL","executionInfo":{"status":"ok","timestamp":1752896883531,"user_tz":-300,"elapsed":13,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s701DhpMv_0M","executionInfo":{"status":"ok","timestamp":1752896885076,"user_tz":-300,"elapsed":180,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"02c56b86-b97d-4c2a-cca4-39a0c38caeed"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 301 entries, 0 to 300\n","Data columns (total 8 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Year           301 non-null    int64  \n"," 1   Selling_Price  301 non-null    float64\n"," 2   Present_Price  301 non-null    float64\n"," 3   Driven_kms     301 non-null    int64  \n"," 4   Fuel_Type      301 non-null    object \n"," 5   Selling_type   301 non-null    object \n"," 6   Transmission   301 non-null    object \n"," 7   Owner          301 non-null    int64  \n","dtypes: float64(2), int64(3), object(3)\n","memory usage: 18.9+ KB\n"]}]},{"cell_type":"code","source":["x=df.drop(columns=['Selling_Price'])\n","y= df['Selling_Price']"],"metadata":{"id":"J98lcY2awHoK","executionInfo":{"status":"ok","timestamp":1752896898781,"user_tz":-300,"elapsed":33,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["categorical=x.select_dtypes(include=['object'])"],"metadata":{"id":"OUN2LVK1wYSQ","executionInfo":{"status":"ok","timestamp":1752896900033,"user_tz":-300,"elapsed":31,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["# Dummy encoding"],"metadata":{"id":"qBrL9mNJwkk3"}},{"cell_type":"code","source":["dummy=pd.get_dummies(categorical,drop_first=True)\n","x= x.drop(list(categorical.columns),axis=1)\n","x=pd.concat([x,dummy],axis=1)"],"metadata":{"id":"UgPXijhBwxBV","executionInfo":{"status":"ok","timestamp":1752896901050,"user_tz":-300,"elapsed":8,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split as tts\n","x_train,x_test,y_train,y_test=tts(x,y,random_state=101)"],"metadata":{"id":"yrLVfBOEwsgm","executionInfo":{"status":"ok","timestamp":1752896902979,"user_tz":-300,"elapsed":90,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# prompt: from sKlearn.model.tree import DecisionTreeRegressor\n","\n","from sklearn.tree import DecisionTreeRegressor\n","model=DecisionTreeRegressor()\n","model.fit(x_train,y_train)\n","predictions=model.predict(x_test)"],"metadata":{"id":"rx3IgbNwzeqx","executionInfo":{"status":"ok","timestamp":1752896908449,"user_tz":-300,"elapsed":498,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error\n","model.score(x_test,predictions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quYNgibN0SRS","executionInfo":{"status":"ok","timestamp":1752896909582,"user_tz":-300,"elapsed":33,"user":{"displayName":"Arooj Fatima","userId":"14797116220855010739"}},"outputId":"c09293b2-2777-4d29-8986-7413e0bc0a1e"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":19}]}]}